(self.webpackChunkdrill4j_github_io=self.webpackChunkdrill4j_github_io||[]).push([[7235],{1406:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},metadata:function(){return s},toc:function(){return o},default:function(){return c}});var l=n(2122),a=n(9756),i=(n(7294),n(3905)),r={id:"drill4net-scanner-parameters",title:"Drill4Net Scanner Parameters"},s={unversionedId:"drill4net/drill4net-scanner-parameters",id:"drill4net/drill4net-scanner-parameters",isDocsHomePage:!1,title:"Drill4Net Scanner Parameters",description:"Example",source:"@site/docs/drill4net/drill4net-scanner-parameters.mdx",sourceDirName:"drill4net",slug:"/drill4net/drill4net-scanner-parameters",permalink:"/docs/drill4net/drill4net-scanner-parameters",version:"current",frontMatter:{id:"drill4net-scanner-parameters",title:"Drill4Net Scanner Parameters"},sidebar:"docs",previous:{title:"Project with Tests Setup",permalink:"/docs/drill4net/tests-project-setup"},next:{title:"Chrome Browser Extension",permalink:"/docs/drill4net/chrome-extention"}},o=[{value:"Example",id:"example",children:[]},{value:"Optional Parameters",id:"optional-parameters",children:[]},{value:"Filters",id:"filters",children:[]}],p={toc:o};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Drill4Net.Scanner.exe <path that contains executable file> --target <path to executable file> --exclude "[myapplication.*]MyApplication.Core.Coverage"\n')),(0,i.kt)("p",null,"Drill4Net allows to explicitly set what must be included using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--include")," option.  "),(0,i.kt)("p",null,"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'--include "[*]*" - Includes all types in all assemblies (everything is instrumented)\n--include "[myapplication.*]MyApplication.Core.Coverage" - Includes the Coverage class in the MyApplication.Core namespace belonging to any assembly that matches "myapplication.*" (e.g "myapplication.core")\n--include "[myapplication.*.tests?]*" - Includes all types in any assembly starting with "myapplication." and ending with ".test" or ".tests" (the ? makes the "s" optional)\n')),(0,i.kt)("p",null,"Both ",(0,i.kt)("inlineCode",{parentName:"p"},"--exclude")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--include")," options can be used together but ",(0,i.kt)("inlineCode",{parentName:"p"},"--exclude")," takes precedence. You can specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"--exclude")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--include")," options multiple times to allow for multiple filter expressions.\nYou can also include coverage of the test assembly itself by specifying the ",(0,i.kt)("inlineCode",{parentName:"p"},"--include-test-assembly")," flag."),(0,i.kt)("h2",{id:"optional-parameters"},"Optional Parameters"),(0,i.kt)("p",null,"There are some optional parameters to which you can provide arguments in ",(0,i.kt)("em",{parentName:"p"},"Drill4Net Scanner")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  --exclude                 Filter expressions to exclude specific modules and types.\n  --include                 Filter expressions to include only specific modules and types.\n  --exclude-by-file         Glob patterns specifying source files to exclude.\n  --include-directory       Include directories containing additional assemblies to be instrumented.\n  --exclude-by-attribute    Attributes to exclude from code coverage.\n  --include-test-assembly   Specifies whether to report code coverage of the test assembly.\n")),(0,i.kt)("p",null,"NB. For multiple value options, you have to specify values multiple times i.e."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"--exclude-by-attribute 'Obsolete' --exclude-by-attribute'GeneratedCode' --exclude-by-attribute 'CompilerGenerated'\n")),(0,i.kt)("h2",{id:"filters"},"Filters"),(0,i.kt)("p",null,"Dill4Net gives the ability to have fine-grained control over what gets excluded using ",(0,i.kt)("em",{parentName:"p"},"filter expressions"),".\nSyntax: ",(0,i.kt)("inlineCode",{parentName:"p"},"--exclude '[Assembly-Filter]Type-Filter'"),"\nWildcards"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"*"," - matches zero or more characters"),(0,i.kt)("li",{parentName:"ul"},"? - the prefixed character is optional")),(0,i.kt)("p",null,"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'--exclude "[*]*" - Excludes all types in all assemblies (nothing is instrumented)\n--exclude "[myapplication.*]MyApplication.Core.Coverage" - Excludes the Coverage class in the MyApplication.Core namespace belonging to any assembly that matches "myapplication.*" (e.g "myapplication.core")\n--exclude "[*]MyApplication.Core.Instrumentation.*" - Excludes all types belonging to MyApplication.Core.Instrumentation namespace in any assembly\n--exclude "[myapplication.*.tests?]*" - Excludes all types in any assembly starting with "myapplication." and ending with ".test" or ".tests" (the ? makes the "s" optional)\n--exclude "[myapplication.*]*" --exclude "[*]MyApplication.Core*" - Excludes assemblies matching "myapplication.*" and excludes all types belonging to the MyApplication.Core namespace in any assembly\n--exclude "[myapplication.core]MyApplication.Core.Coverage" - Excludes the Coverage class in the MyApplication.Core namespace belonging to "myapplication.core" assembly\n')))}c.isMDXComponent=!0}}]);