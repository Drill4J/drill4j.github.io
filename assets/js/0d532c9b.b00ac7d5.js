(self.webpackChunkdrill4j_github_io=self.webpackChunkdrill4j_github_io||[]).push([[2670],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=l(r),d=o,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||i;return r?n.createElement(m,c(c({ref:t},p),{},{components:r})):n.createElement(m,c({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var l=2;l<i;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8282:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return a},toc:function(){return s},default:function(){return p}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),c={id:"place-in-ci-cd",title:"Basisc Section Overview"},a={unversionedId:"basic-concepts/place-in-ci-cd",id:"version-0.8.0/basic-concepts/place-in-ci-cd",isDocsHomePage:!1,title:"Place of Drill4J in CI/CD",description:"Drill4J allows to make Plan - Code - Test loop in typical CI/CD process more transparent. It measures how tests affected the application.",source:"@site/versioned_docs/version-0.8.0/basic-concepts/place-in-ci-cd.mdx",sourceDirName:"basic-concepts",slug:"/basic-concepts/place-in-ci-cd",permalink:"/docs/0.8.0/basic-concepts/place-in-ci-cd",version:"0.8.0",frontMatter:{id:"place-in-ci-cd",title:"Basisc Section Overview"}},s=[{value:"Integration process",id:"integration-process",children:[]}],l={toc:s};function p(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Drill4J allows to make Plan - Code - Test loop in typical CI/CD process more transparent. It measures how tests affected the application.\nThese measurements further inform team during both Code and Test stages."),(0,i.kt)("p",null,"Drill4J allows to assemble the complete picture from all testing stages, rather than using disjointed coverage reports."),(0,i.kt)("h2",{id:"integration-process"},"Integration process"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Pick testing stages to integrate with"),(0,i.kt)("li",{parentName:"ol"},"Do a test run to supply initial data"),(0,i.kt)("li",{parentName:"ol"},"Start using metrics provided")))}p.isMDXComponent=!0}}]);