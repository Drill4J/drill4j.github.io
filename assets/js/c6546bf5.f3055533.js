(self.webpackChunkdrill4j_github_io=self.webpackChunkdrill4j_github_io||[]).push([[4847],{9644:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return s},default:function(){return p}});var n=a(2122),r=a(9756),l=(a(7294),a(3905)),i={id:"test-agent",title:"Test Agent"},o={unversionedId:"agents/test-agent",id:"version-0.9.0/agents/test-agent",isDocsHomePage:!1,title:"Test Agent",description:"The Drill4J Test Agent allows you to map tests to code coverage and vice versa.",source:"@site/versioned_docs/version-0.9.0/agents/test-agent.mdx",sourceDirName:"agents",slug:"/agents/test-agent",permalink:"/docs/agents/test-agent",version:"0.9.0",frontMatter:{id:"test-agent",title:"Test Agent"},sidebar:"version-0.9.0/docs",previous:{title:"Application Agent",permalink:"/docs/agents/java-agent"},next:{title:"CI/CD Integration Plugin",permalink:"/docs/cicd-integration/cicd-integration-plugin"}},s=[{value:"How to download",id:"how-to-download",children:[{value:"Download agent files manually",id:"download-agent-files-manually",children:[]},{value:"Use Drill4J CI/CD Integration Plugin for Maven and Gradle",id:"use-drill4j-cicd-integration-plugin-for-maven-and-gradle",children:[]}]},{value:"How to set path to agent when running tests",id:"how-to-set-path-to-agent-when-running-tests",children:[{value:"Pass <code>-agentpath</code> in command line for running tests",id:"pass--agentpath-in-command-line-for-running-tests",children:[]},{value:"Set <code>-agentpath</code> in the build configuration file",id:"set--agentpath-in-the-build-configuration-file",children:[]}]},{value:"How to set agent parameters",id:"how-to-set-agent-parameters",children:[]},{value:"Agent parameters reference",id:"agent-parameters-reference",children:[{value:"General Configuration",id:"general-configuration",children:[]},{value:"Recommended Tests",id:"recommended-tests",children:[]},{value:"Test Tracing",id:"test-tracing",children:[]},{value:"API key security",id:"api-key-security",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"How to confirm agent is loaded",id:"how-to-confirm-agent-is-loaded",children:[]},{value:"Cannot load the agent because some agent parameters are set incorrectly",id:"cannot-load-the-agent-because-some-agent-parameters-are-set-incorrectly",children:[]},{value:"Error &quot;Could not create an Appender of type ...&quot;",id:"error-could-not-create-an-appender-of-type-",children:[]}]},{value:"Limitations and Known Issues",id:"limitations-and-known-issues",children:[]}],d={toc:s};function p(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The Drill4J Test Agent allows you to map tests to code coverage and vice versa.\nKey Features:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Test context propagation"),(0,l.kt)("li",{parentName:"ul"},"Control over test execution")),(0,l.kt)("p",null,"General integration steps are:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#how-to-download"},"Download Drill4J agent files")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#how-to-set-path-to-agent-when-running-tests"},"Set path to agent when running tests")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#how-to-set-agent-parameters"},"Set agent parameters"))),(0,l.kt)("p",null,"Due to the diverse tools used in software development \u2014 such as CI/CD providers, deployment methods, testing stages \u2014 the exact process will depend on the environment."),(0,l.kt)("h2",{id:"how-to-download"},"How to download"),(0,l.kt)("h3",{id:"download-agent-files-manually"},"Download agent files manually"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:"),"\nThis is not the most convenient way to get agent files.\nIf you are using Maven or Gradle, there is a primary way, see ",(0,l.kt)("a",{parentName:"p",href:"#use-drill4j-cicd-integration-plugin-for-maven-and-gradle"},"next section"),".")),(0,l.kt)("p",null,"The most basic way to get agent files is to download release .zip manually."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Download release appropriate for your platform at  ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Drill4J/autotest-agent/releases/tag/v0.23.1"},"https://github.com/Drill4J/autotest-agent/releases/tag/v0.23.1"),"."),(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"mingwX64")," is for Windows, Linux and Mac releases are called respectively."))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Unzip the file. Rename unzipped folder to ",(0,l.kt)("inlineCode",{parentName:"p"},"agent"),".")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Inside you'll find the following files:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"libdrill_agent.so")," (on Windows - ",(0,l.kt)("inlineCode",{parentName:"li"},".dll"),", on Mac - ",(0,l.kt)("inlineCode",{parentName:"li"},".dylib"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"drill-runtime.jar")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"drill.properties"))))),(0,l.kt)("p",null,"Refer to ",(0,l.kt)("a",{parentName:"p",href:"#how-to-set-path-to-agent-when-running-tests"},"next section")," for further steps."),(0,l.kt)("h3",{id:"use-drill4j-cicd-integration-plugin-for-maven-and-gradle"},"Use Drill4J CI/CD Integration Plugin for Maven and Gradle"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Use cases"),": when application (or certain classes of application) is launched with Maven or Gradle. That's most often the case with ",(0,l.kt)("strong",{parentName:"p"},"Unit tests"),".")),(0,l.kt)("p",null,"Drill4J CI/CD Integration Plugin ",(0,l.kt)("strong",{parentName:"p"},"automatically downloads agent files")," and ",(0,l.kt)("strong",{parentName:"p"},"passes required parameters to Java when running tests"),"."),(0,l.kt)("p",null,"Because of that, the next sections of this page are irrelevant in this scenario. Instead, please refer to ",(0,l.kt)("a",{parentName:"p",href:"/docs/cicd-integration/cicd-integration-plugin"},"CI/CD Integration Plugin")," page for more info."),(0,l.kt)("h2",{id:"how-to-set-path-to-agent-when-running-tests"},"How to set path to agent when running tests"),(0,l.kt)("p",null,"Test agent use ",(0,l.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/8/docs/platform/jvmti/jvmti.html#starting"},"-agentpath JVM command line argument")," to loading when starting java process."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"  # Linux\njava -agentpath:/agent/libdrill_agent.so\n  # Windows\njava -agentpath:/agent/drill_agent.dll\n  # macOS\njava -agentpath:/agent/libdrill_agent.dylib\n")),(0,l.kt)("p",null,"In order to pass ",(0,l.kt)("inlineCode",{parentName:"p"},"-agentpath")," command-line argument when running tests, you can configure the ",(0,l.kt)("a",{parentName:"p",href:"https://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#argLine"},"argLine for Maven"),"\nor ",(0,l.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:jvmArgs"},"jvmArgs for Gradle")," parameters."),(0,l.kt)("p",null,"There are two way to pass ",(0,l.kt)("inlineCode",{parentName:"p"},"-agentpath")," parameter:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In command line for running tests"),(0,l.kt)("li",{parentName:"ul"},"Inside the build configuration file")),(0,l.kt)("h3",{id:"pass--agentpath-in-command-line-for-running-tests"},"Pass ",(0,l.kt)("inlineCode",{parentName:"h3"},"-agentpath")," in command line for running tests"),(0,l.kt)("h5",{id:"gradle"},"Gradle"),(0,l.kt)("p",null,"Add ",(0,l.kt)("inlineCode",{parentName:"p"},"-DjvmArgs")," parameter to gradle command line:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew test -DjvmArgs=-agentpath:/path/to/agent\n")),(0,l.kt)("h5",{id:"maven"},"Maven"),(0,l.kt)("p",null,"Add ",(0,l.kt)("inlineCode",{parentName:"p"},"-DargLine")," parameter to Maven command line:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./mvn test -DargLine=-agentpath:/path/to/agent\n")),(0,l.kt)("h3",{id:"set--agentpath-in-the-build-configuration-file"},"Set ",(0,l.kt)("inlineCode",{parentName:"h3"},"-agentpath")," in the build configuration file"),(0,l.kt)("h5",{id:"gradle-1"},"Gradle"),(0,l.kt)("p",null,"Add ",(0,l.kt)("inlineCode",{parentName:"p"},"jvmArgs")," to Gradle test configuration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},"test {\n    jvmArgs = '-agentpath:/path/to/agent'\n}\n")),(0,l.kt)("h5",{id:"maven-1"},"Maven"),(0,l.kt)("p",null,"Add ",(0,l.kt)("inlineCode",{parentName:"p"},"argLine")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"maven-surefire-plugin")," in pom.xml:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-surefire-plugin</artifactId>\n    <configuration>\n        <argLine>-agentpath:/path/to/agent</argLine>\n    </configuration>\n</plugin>\n")),(0,l.kt)("h2",{id:"how-to-set-agent-parameters"},"How to set agent parameters"),(0,l.kt)("p",null,"Drill4J Test Agent has the same ways to set agent parameters that Application Agent.\nTo know how to use it see the ",(0,l.kt)("a",{parentName:"p",href:"/docs/agents/java-agent#how-to-set-agent-parameters"},"Application Agent reference"),"."),(0,l.kt)("h2",{id:"agent-parameters-reference"},"Agent parameters reference"),(0,l.kt)("h3",{id:"general-configuration"},"General Configuration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Example Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"apiUrl"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"http://localhost/api")),(0,l.kt)("td",{parentName:"tr",align:null},"URL to Drill4J Admin /api endpoint.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"apiKey"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"1_01cdf51ff20544ee...")),(0,l.kt)("td",{parentName:"tr",align:null},"Drill4J Backend API key. Generate it using Drill4J UI.  Please make sure to read the ",(0,l.kt)("a",{parentName:"td",href:"#api-key-security"},"apiKey security")," section")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"groupId"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"my-cool-app")),(0,l.kt)("td",{parentName:"tr",align:null},"Unique arbitrary string identifying your application group.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"testTaskId"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"check")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the test task or test command that was launched to run tests.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"withJsCoverage"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"Enables collecting JS coverage by Chrome DevTools")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"devToolsProxyAddress"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"http://localhost:8092")),(0,l.kt)("td",{parentName:"tr",align:null},"URL address of ",(0,l.kt)("a",{parentName:"td",href:"#"},"Drill4J DevToolsProxy"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageQueueLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"512Mb")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum queue capacity for sending messages to Drill4J Backend. The queue may accumulate, for example, if the server is unavailable. If none is specified, the default value is 512Mb.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageMaxRetries"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"10")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum number of retries for sending messages to Drill4J Backend. If nothing is specified, there will be infinite attempts to send messages.")))),(0,l.kt)("h3",{id:"recommended-tests"},"Recommended Tests"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recommendedTestsEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Enables Test Recommendations")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recommendedTestsCoveragePeriodDays"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Period of days for which coverage data is taken into account for test recommendations")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recommendedTestsTargetAppId"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"ID of the application under test")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recommendedTestsTargetCommitSha"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Commit SHA of the application under test")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recommendedTestsTargetBuildVersion"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Application under test version")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recommendedTestsBaselineCommitSha"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Baseline commit SHA of the application under test")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recommendedTestsBaselineBuildVersion"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Application under test baseline version")))),(0,l.kt)("h3",{id:"test-tracing"},"Test Tracing"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"testTracingEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Enables test tracing. If enabled, collected coverage will be related to the executed test, otherwise only to the test session")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"testLaunchMetadataSendingEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"Enables sending test launch metadata to Drill4J Backend.")))),(0,l.kt)("h3",{id:"api-key-security"},"API key security"),(0,l.kt)("p",null,"\u2757 Please avoid hardcoding ",(0,l.kt)("strong",{parentName:"p"},"apiKey")," and exposing it in plain text. Instead, use environment variables. \u2757"),(0,l.kt)("p",null,"Bad example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"  -agentpath:/agent/libdrill_agent.so=drillApiKey=123\n")),(0,l.kt)("p",null,"Good example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"  # Set DRILL_API_KEY variable prior to application launch\n  DRILL_API_KEY=123\n  # exact syntax for env variables will depend on your environment\n")),(0,l.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,l.kt)("h3",{id:"how-to-confirm-agent-is-loaded"},"How to confirm agent is loaded"),(0,l.kt)("p",null,"Once loaded Drill4J agent prints the following ASCII logo:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-log"},'  ____    ____                 _       _          _  _                _\n  |  _"\\U |  _"\\ u     ___     |"|     |"|        | ||"|            U |"| u\n/| | | |\\| |_) |/    |_"_|  U | | u U | | u      | || |_          _ \\| |/\nU| |_| |\\|  _ <       | |    \\| |/__ \\| |/__     |__   _|        | |_| |_,-.\n  |____/ u|_| \\_\\    U/| |\\u   |_____| |_____|      /|_|\\          \\___/-(_/\n  |||_   //   \\\\_.-,_|___|_,-.//  \\\\  //  \\\\      u_|||_u          _//\n(__)_) (__)  (__)\\_)-\' \'-(_/(_")("_)(_")("_)     (__)__)         (__)\nTest Agent (v0.23.1)\n')),(0,l.kt)("p",null,"It indicates that you have configured agent path correctly and Java picked up and loaded agent files."),(0,l.kt)("h3",{id:"cannot-load-the-agent-because-some-agent-parameters-are-set-incorrectly"},"Cannot load the agent because some agent parameters are set incorrectly"),(0,l.kt)("p",null,"If below Drill4J ASCII logo you see the following message:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"ERROR [com.epam.drill.agent.configuration.ValidatedParametersProvider] Cannot load the agent because some agent parameters are set incorrectly. Please\ncheck the following parameters:\n")),(0,l.kt)("p",null,"It indicates that you are missing some required parameters. Refer to the ",(0,l.kt)("a",{parentName:"p",href:"#agent-parameters-reference"},"agent parameters")," section."),(0,l.kt)("h3",{id:"error-could-not-create-an-appender-of-type-"},'Error "Could not create an Appender of type ..."'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"|-ERROR in com.epam.drill.autotest.shadow.ch.qos.logback.core.joran.action.AppenderAction - Could not create an Appender of type [ch.qos.logback.core.ConsoleAppender].\n|-ERROR in com.epam.drill.autotest.shadow.ch.qos.logback.core.joran.spi.Interpreter@5:73 - ActionException in Action for tag [appender]\n")),(0,l.kt)("p",null,"The following error can be safely ignored as it doesn\u2019t impact the functionality of the application or agent.\nIt simply indicates that Logback is being used with a logback.xml file, which conflicts with the Drill4J logging configuration. However, logging will still function as expected."),(0,l.kt)("h2",{id:"limitations-and-known-issues"},"Limitations and Known Issues"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The Drill4J is not compatible with the ",(0,l.kt)("a",{parentName:"li",href:"https://www.jacoco.org/jacoco/"},"JaCoCo")," code coverage tool.\nJaCoCo conflicts with the Drill4J Test Agent and Application Agent, so it needs to be removed.\nThis should\u2019t be a concern, as Drill4J includes the same functionality along with additional features.")))}p.isMDXComponent=!0}}]);