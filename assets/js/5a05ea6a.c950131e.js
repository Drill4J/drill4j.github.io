(self.webpackChunkdrill4j_github_io=self.webpackChunkdrill4j_github_io||[]).push([[3923],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=i,g=c["".concat(p,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8648:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),o={id:"java-agent",title:"Java Application Agent"},l={unversionedId:"agents/java-agent",id:"version-0.9.0/agents/java-agent",isDocsHomePage:!1,title:"Application Agent",description:"Drill4J Java Agent enables metrics collection for JVM-based applications.",source:"@site/versioned_docs/version-0.9.0/agents/application-agent.mdx",sourceDirName:"agents",slug:"/agents/java-agent",permalink:"/docs/agents/java-agent",version:"0.9.0",frontMatter:{id:"java-agent",title:"Java Application Agent"},sidebar:"version-0.9.0/docs",previous:{title:"API Tests",permalink:"/docs/tests-integration/api-tests"},next:{title:"Services Overview",permalink:"/docs/drill-services/overview"}},p=[{value:"Download",id:"download",children:[]},{value:"Starting the agent",id:"starting-the-agent",children:[]},{value:"Delivery options",id:"delivery-options",children:[{value:"CI/CD integration plugin",id:"cicd-integration-plugin",children:[]},{value:"Docker Shared Volume",id:"docker-shared-volume",children:[]},{value:"Kubernetes Init Container",id:"kubernetes-init-container",children:[]}]}],s={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Drill4J Java Agent enables metrics collection for JVM-based applications."),(0,r.kt)("h2",{id:"download"},"Download"),(0,r.kt)("p",null,"Download ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Drill4J/java-agent/releases/tag/v0.9.0"},"https://github.com/Drill4J/java-agent/releases/tag/v0.9.0")," release zip file."),(0,r.kt)("p",null,"Make sure to download release appropriate for the platform your application is running on:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Windows - mingwX64"),(0,r.kt)("li",{parentName:"ul"},"Linux - linuxX64"),(0,r.kt)("li",{parentName:"ul"},"Mac on Intel processors - macosX64"),(0,r.kt)("li",{parentName:"ul"},"Mac on Apple Silicon - not supported yet; work in progress")),(0,r.kt)("p",null,"Unzip the file. Rename unzipped folder to ",(0,r.kt)("inlineCode",{parentName:"p"},"agent"),". It must contain ",(0,r.kt)("inlineCode",{parentName:"p"},"libdrill_agent.so")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},".dll"),", depending on platform), ",(0,r.kt)("inlineCode",{parentName:"p"},"drill-runtime.jar")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"drill.properties")),(0,r.kt)("h2",{id:"starting-the-agent"},"Starting the agent"),(0,r.kt)("p",null,"You have to set ",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/envvars002.html"},(0,r.kt)("inlineCode",{parentName:"a"},"JAVA_TOOL_OPTIONS"))," env variable to ",(0,r.kt)("strong",{parentName:"p"},"Java process")," to use Drill4J Java Agent. Its a built-in env variable supported by any Java version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"  # Set JAVA_TOOL_OPTIONS before running your Java app\n  JAVA_TOOL_OPTIONS=...\n  # This is your application\n  java -jar my-app.jar\n")),(0,r.kt)("p",null,"This is the ",(0,r.kt)("strong",{parentName:"p"},"example string"),", see the instructions below:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"JAVA_TOOL_OPTIONS=-agentpath:/agent/libdrill_agent.so=drillInstallationDir=/agent,drillApiUrl=${DRILL_ADMIN_ADDRESS},appId=${DRILL_API_AGENT_ID},groupId=${DRILL_GROUP_ID},drillApiKey=${DRILL_API_KEY},buildVersion=0.1.0,packagePrefixes=io/spring")),(0,r.kt)("p",null,"This looks overwhelming, lets break it down:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"-agentpath:/agent/libdrill_agent.so=drillInstallationDir=/agent")," - path to Drill4J Agent files "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"in case with Windows-based release pass ",(0,r.kt)("inlineCode",{parentName:"li"},"libdrill_agent.dll")," (not .so)"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"drillApiUrl=")," - URL to Drill4J Admin /api endpoint, example: ",(0,r.kt)("a",{parentName:"p",href:"http://my-host-with-drill4j-admin-behind-it.com/api"},"http://my-host-with-drill4j-admin-behind-it.com/api"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"groupId=")," - Unique arbitrary string identifying your application group (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"groupId=my-cool-app"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"appId=")," - Unique arbitrary string identifying your application (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"appId=api-service")," )")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"drillApiKey=")," - Drill4J Bakend API key. Generate it using Drill4J UI")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"buildVersion=")," - build version of your application. Typically set to version tag (like ",(0,r.kt)("inlineCode",{parentName:"p"},"v1.2.3"),")."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"In case you don't have tags for all application builds you can additionally pass ",(0,r.kt)("inlineCode",{parentName:"li"},"commitSha=")," and set it to commit hash value"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"packagePrefixes=")," - topmost common package of your application."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For example: if your packages are ",(0,r.kt)("inlineCode",{parentName:"li"},'"my.org.somecoolapp.user"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"my.org.somecoolapp.orders.repository"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"my.org.somecoolapp.something.else"')),(0,r.kt)("li",{parentName:"ul"},"then you set ",(0,r.kt)("inlineCode",{parentName:"li"},"packagePrefixes=")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"packagePrefixes=my/org/somecoolapp"))))),(0,r.kt)("h2",{id:"delivery-options"},"Delivery options"),(0,r.kt)("p",null,"Besides manual download, there are other ways to provide Drill4J Java Agent files to your application."),(0,r.kt)("h3",{id:"cicd-integration-plugin"},"CI/CD integration plugin"),(0,r.kt)("p",null,"Drill4J provides plugin for Maven and Gradle to setup and download Java Agent automatically."),(0,r.kt)("p",null,"It is the preferred way to run Drill4J Java Agent when dealing with ",(0,r.kt)("strong",{parentName:"p"},"unit and integration test")),(0,r.kt)("h3",{id:"docker-shared-volume"},"Docker Shared Volume"),(0,r.kt)("p",null,"When running under Docker it can be handier to use our small image, that runs a script to download these files into shared volume:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.8\'\nservices:\n\n  # The sole function of this container is to download agent files\n  # according to version specified in AGENT_VERSION env variable\n  # and place them into volume named agent-files\n  agent-files:\n    image: drill4j/java-agent:0.8.0-38\n    environment:\n      - AGENT_VERSION=${JAVA_AGENT_VERSION}\n    volumes:\n      - agent-files:/data\n    healthcheck:\n      # ensures that container returns "healthy" status only when script is finished downloading files. Mind the .so, swap for .dll for Windows-based enviroments\n      test: ["CMD", "sh", "-c", "test -f /data/agent/libdrill_agent.so || exit 1"]\n      interval: 30s\n      retries: 6\n      start_period: 10s\n      timeout: 10s\n\nvolumes:\n  # you can attach this volume to your Application Under Test for ease of access to agent files\n  agent-files:\n')),(0,r.kt)("h3",{id:"kubernetes-init-container"},"Kubernetes Init Container"),(0,r.kt)("p",null,"When running in Kubernetes consider using ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"},"init containers"),"\nto download agent files ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Drill4J/java-agent/releases"},"from github")," and make them available for pod running ",(0,r.kt)("em",{parentName:"p"},"App Under Test")))}d.isMDXComponent=!0}}]);