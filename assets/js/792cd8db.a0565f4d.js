(self.webpackChunkdrill4j_github_io=self.webpackChunkdrill4j_github_io||[]).push([[9e3],{2296:function(e,t,n){"use strict";n.d(t,{r0:function(){return s},Ct:function(){return h},jL:function(){return k},Zb:function(){return u},u0:function(){return ue},JO:function(){return d},Ee:function(){return y},kI:function(){return B},dl:function(){return j},HC:function(){return P},Wl:function(){return ce},E1:function(){return oe},Nt:function(){return Y},iA:function(){return R},v3:function(){return H}});var a,l,i,r=n(7294),o="additionalInformation_3spC",s=function(e){var t=e.children,n=e.className,a=void 0===n?"":n;return r.createElement("p",{className:o+" "+a},t)},c=n(4996),d=function(e){var t=e.src,n=e.width,a=void 0===n?16:n,l=e.height,i=void 0===l?16:l,o=e.className;return r.createElement("span",{className:o,style:{backgroundImage:"url("+(0,c.Z)(t)+")",minWidth:a+"px",minHeight:i+"px",display:"inline-block"}})},p="card_3fnR",u=function(e){var t=e.children,n=e.iconSrc,a=e.href;return r.createElement("a",{href:(0,c.Z)(a),className:p,rel:"noreferrer"},r.createElement(d,{src:n,width:48,height:48}),r.createElement("span",null,t))},g=n(2122),m=n(9756),h=function(e){var t=e.color,n=void 0===t?"#687481":t,a=e.children,l=(0,m.Z)(e,["color","children"]);return r.createElement("span",(0,g.Z)({className:"inline-block px-2 text-14 leading-24 bg-monochrome-light-tint rounded-lg",style:{color:n}},l),a)},k=function(e){var t=e.backgroundSrc,n=e.children,a=(0,m.Z)(e,["backgroundSrc","children"]);return r.createElement("div",(0,g.Z)({className:"py-14 px-5 text-center bg-cover",style:{backgroundImage:"url("+(0,c.Z)(t)+")"}},a),n)},f=n(2879),b={color:"#a9a9a9",fontSize:"14px",marginBottom:"15px"},v={width:"400px",marginBottom:"10px"},y=function(e){var t=e.src,n=e.alt,a=(0,r.useState)(!1),l=a[0],i=a[1];return r.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center"}},r.createElement("img",{className:"cursor-pointer",src:(0,c.Z)(t),onClick:function(){return i(!0)},alt:n,style:v}),l&&r.createElement(f.Z,{mainSrc:(0,c.Z)(t),onCloseRequest:function(){return i(!1)},enableZoom:!1,imagePadding:48}),r.createElement("p",{style:b},n))},N=n(1839);function x(){return(x=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function A(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var w,I=function(e){var t=e.title,n=e.titleId,o=A(e,["title","titleId"]);return r.createElement("svg",x({xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none","aria-labelledby":n},o),t?r.createElement("title",{id:n},t):null,a||(a=r.createElement("rect",{opacity:.8,width:24,height:24,rx:4,fill:"#687481"})),l||(l=r.createElement("path",{d:"M10.871 13.766l-.407.407-.982.982-1.184 1.184-1.027 1.027c-.166.165-.328.335-.498.497l-.007.007c-.167.167-.473.18-.637 0a.457.457 0 010-.636l.407-.407.982-.982 1.184-1.184 1.027-1.027c.166-.165.328-.335.498-.497l.007-.007c.167-.167.473-.18.637 0 .165.18.179.46 0 .636zm6.999-6.997l-.409.408-.976.976-1.187 1.188-1.022 1.021c-.167.168-.33.338-.5.5l-.008.008c-.167.167-.474.18-.639 0a.459.459 0 010-.639l.409-.408.976-.976 1.187-1.188 1.022-1.021c.167-.168.33-.338.5-.5l.008-.008c.167-.167.474-.18.639 0a.46.46 0 010 .639zm-7.636 4.102l-.407-.407-.982-.982L7.66 8.298 6.634 7.271c-.165-.166-.335-.328-.497-.498l-.007-.007c-.167-.167-.18-.473 0-.637a.457.457 0 01.636 0l.407.407.982.982L9.34 8.702l1.027 1.027c.165.166.335.328.497.498l.007.007c.167.167.18.473 0 .637a.457.457 0 01-.636 0zm6.997 7.001l-.408-.409-.976-.977-1.188-1.187-1.021-1.022c-.168-.168-.338-.33-.5-.5l-.008-.008c-.167-.168-.18-.475 0-.64a.459.459 0 01.639 0l.408.409.976.977 1.188 1.188 1.021 1.021c.168.168.338.33.5.501l.008.008c.167.167.18.474 0 .639a.462.462 0 01-.639 0z",fill:"#fff"})),i||(i=r.createElement("path",{d:"M6.953 13.477v4.046l-.476-.476h4.046c.25 0 .488.219.477.476a.484.484 0 01-.477.477H6.477A.483.483 0 016 17.523v-4.046c0-.25.22-.488.477-.477.259.011.476.21.476.477zM13.477 6h4.046c.258 0 .477.218.477.477v4.046c0 .25-.22.488-.477.477a.484.484 0 01-.476-.477V6.477l.476.476h-4.046c-.25 0-.488-.219-.477-.476A.485.485 0 0113.477 6zm-2.954.953H6.477l.476-.476v4.046c0 .25-.219.488-.476.477A.484.484 0 016 10.523V6.477C6 6.219 6.218 6 6.477 6h4.046c.25 0 .488.22.477.477a.485.485 0 01-.477.476zM18 13.477v4.046a.483.483 0 01-.477.477h-4.046c-.25 0-.488-.22-.477-.477a.484.484 0 01.477-.476h4.046l-.476.476v-4.046c0-.25.219-.488.476-.477.258.011.477.21.477.477z",fill:"#fff"})))};function _(){return(_=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function T(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var C=function(e){var t=e.title,n=e.titleId,a=T(e,["title","titleId"]);return r.createElement("svg",_({width:36,height:36,viewBox:"0 0 36 36",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},a),t?r.createElement("title",{id:n},t):null,w||(w=r.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M9.71 25.264a1.003 1.003 0 00-.001 1.415.997.997 0 001.412.002l7.073-7.073 7.07 7.07c.39.39 1.024.391 1.415.001a.997.997 0 00.002-1.412l-7.073-7.073 7.07-7.07c.39-.39.391-1.024.001-1.415a.997.997 0 00-1.412-.002l-7.073 7.073-7.07-7.07a1.003 1.003 0 00-1.414 0 .997.997 0 00-.002 1.412l7.073 7.073-7.07 7.07z"})))},E="table_EoDL",S="customScroll_2cyn",G="expandedTable_1nfl",R=function(e){var t=e.columns,n=void 0===t?[]:t,a=e.children,l=(0,r.useState)(!1),i=l[0],o=l[1],s=(0,r.useState)(!1),c=s[0],d=s[1],p=(0,r.useRef)(null);return(0,N.Z)(i),(0,r.useEffect)((function(){var e=p&&p.current;var t=new ResizeObserver((function(){e&&d(e.offsetHeight-e.clientHeight>0)}));return t.observe(e),function(){t.disconnect(e)}}),[p]),(0,r.useLayoutEffect)((function(){if(p.current&&null!=n&&n.length){var e=p.current.children[0];e.style.tableLayout="fixed";var t=document.createElement("colgroup");null==n||n.forEach((function(e){var n=document.createElement("col");return n.width=e,n.span=1,t.appendChild(n),n})),e.prepend(t)}}),[]),r.createElement("div",{className:E+" relative mb-4"},c&&r.createElement("button",{className:"absolute top-2 right-2 z-10","aria-label":"open expanded table button",type:"button",onClick:function(){return o(!0)}},r.createElement(I,null)),r.createElement("div",{ref:p,className:S},a),c&&r.createElement("div",{className:"fixed inset-0 z-50 transition-all duration-300 "+(i?"opacity-100":"opacity-0 invisible")},r.createElement("div",{className:"relative z-10 flex items-center justify-end h-12 pr-7 bg-monochrome-black bg-opacity-90"},r.createElement("button",{type:"button","aria-label":"close expanded table button",className:"flex items-center justify-center w-9 h-9 text-monochrome-medium-tint hover:text-monochrome-white",onClick:function(){return o(!1)}},r.createElement(C,{className:"fill-current cursor-pointer"}))),r.createElement("div",{className:"absolute inset-0 bg-monochrome-black opacity-60",onClick:function(){return o(!1)}}),r.createElement("div",{className:G+" "+S},a)))},M="listItem_qKEr",D="listItem_content_1vAz",P=function(e){var t=e.children,n=e.number;return r.createElement("div",{className:M},r.createElement("div",null,n),r.createElement("div",{className:D},t))},j=function(){return r.createElement("div",{className:"flex flex-col items-center"},r.createElement("h3",{className:"text-center"},"We are using a RealWorld app examples:"),r.createElement("div",{className:"flex gap-x-6 mb-12 text-16 leading-20"},r.createElement("div",{className:"flex justify-center items-center gap-x-3 leading-20"},r.createElement("img",{style:{marginBottom:0},src:(0,c.Z)("imgs/spring-logo.svg"),alt:"spring-logo"}),r.createElement("span",{className:"flex flex-col"},"Backend:\xa0",r.createElement("a",{className:"leading-20",href:"https://github.com/gothinkster/spring-boot-realworld-example-app",target:"_blank",rel:"noreferrer noopener"},"Spring"))),r.createElement("div",{className:"flex justify-center items-center"},r.createElement("img",{style:{marginBottom:0},src:(0,c.Z)("imgs/plus.svg"),alt:"plus"})),r.createElement("div",{className:"flex justify-center items-center gap-x-3"},r.createElement("img",{style:{marginBottom:0},src:(0,c.Z)("imgs/angular-logo.svg"),alt:"angular-logo"}),r.createElement("span",{className:"flex flex-col leading-20"},"Frontend:\xa0",r.createElement("a",{className:"leading-20",href:"https://github.com/gothinkster/angular-realworld-example-app",target:"_blank",rel:"noreferrer noopener"},"Angular")))))},q=n(6010),O="wrapper_2S3f",H=function(e){var t=e.children;return r.createElement("div",{className:(0,q.Z)(O,"flex gap-x-3 py-4 px-4 mb-4","rounded-lg bg-orange-default bg-opacity-5","text-monochrome-default text-16 leading-24")},r.createElement(d,{src:"imgs/warning.svg",width:16,height:16,className:"mt-1 h-4 text-orange-default"}),r.createElement("div",null,t))},L="wrapper_1vbA",B=function(e){var t=e.children;return r.createElement("div",{className:(0,q.Z)(L,"flex gap-x-3 py-5 px-4 mb-4","rounded-lg bg-blue-default bg-opacity-5","text-monochrome-default text-16 leading-24")},r.createElement(d,{src:"imgs/info.svg",width:16,height:16,className:"mt-1 h-4 text-orange-default"}),r.createElement("div",null,t))},J=n(5035),Z="tableOfContents_1zbr",U="table-of-contents__link";function z(e){var t=e.toc,n=e.isChild;return t.length?r.createElement("ul",{className:n?"":"table-of-contents table-of-contents__left-border"},t.map((function(e){return r.createElement("li",{key:e.id},r.createElement("a",{href:"#"+e.id,className:U,dangerouslySetInnerHTML:{__html:e.value},title:e.value}),r.createElement(z,{isChild:!0,toc:e.children}))}))):null}function Y(e){var t=e.toc;return(0,J.Z)(U,"table-of-contents__link--active",100),r.createElement("div",{className:(0,q.Z)(Z,"thin-scrollbar")},r.createElement(z,{toc:t}))}var V=n(3935),F=n(2263),W=n(5977),K=n(6742),X=n(9105),$=n(6397),Q=n(7052),ee=n(6747),te=n(5613),ne=n(4973),ae=null;function le(e){var t=e.hit,n=e.children;return r.createElement(K.Z,{to:t.url},n)}function ie(e){var t=e.state,n=e.onClose,a=(0,$.Z)().generateSearchPageLink;return r.createElement(K.Z,{to:a(t.query),onClick:n},"See all ",t.context.nbHits," results")}function re(e){var t,a,l=e.contextualSearch,i=e.closeDocsSidebar,o=(0,m.Z)(e,["contextualSearch","closeDocsSidebar"]),s=(0,F.default)().siteMetadata,d=(0,te.Z)(),p=null!=(t=null==(a=o.searchParameters)?void 0:a.facetFilters)?t:[],u=l?[].concat(d,p):p,h=Object.assign({},o.searchParameters,{facetFilters:u}),k=(0,c.C)().withBaseUrl,f=(0,W.k6)(),b=(0,r.useRef)(null),v=(0,r.useRef)(null),y=(0,r.useState)(!1),N=y[0],x=y[1],A=(0,r.useState)(null),w=A[0],I=A[1],_=(0,r.useCallback)((function(){return ae?Promise.resolve():Promise.all([n.e(3763).then(n.bind(n,3763)),Promise.all([n.e(532),n.e(6945)]).then(n.bind(n,6945)),Promise.all([n.e(532),n.e(4628)]).then(n.bind(n,4628))]).then((function(e){var t=e[0].DocSearchModal;ae=t}))}),[]),T=(0,r.useCallback)((function(){_().then((function(){b.current=document.createElement("div"),document.body.insertBefore(b.current,document.body.firstChild),x(!0)}))}),[_,x]),C=(0,r.useCallback)((function(){i(),x(!1),b.current.remove()}),[x]),E=(0,r.useCallback)((function(e){_().then((function(){x(!0),I(e.key)}))}),[_,x,I]),S=(0,r.useRef)({navigate:function(e){var t=e.itemUrl;f.push(t)}}).current,G=(0,r.useRef)((function(e){return e.map((function(e){var t=document.createElement("a");return t.href=e.url,Object.assign({},e,{url:k(""+t.pathname+t.hash)})}))})).current,R=(0,r.useMemo)((function(){return function(e){return r.createElement(ie,(0,g.Z)({},e,{onClose:C}))}}),[C]),M=(0,r.useCallback)((function(e){return e.addAlgoliaAgent("docusaurus",s.docusaurusVersion),e}),[s.docusaurusVersion]);(0,Q.D)({isOpen:N,onOpen:T,onClose:C,onInput:E,searchButtonRef:v});var D=(0,ne.I)({id:"theme.SearchBar.label",message:"Search",description:"The ARIA label and placeholder for search button"});return r.createElement(r.Fragment,null,r.createElement(X.Z,null,r.createElement("link",{rel:"preconnect",href:"https://"+o.appId+"-dsn.algolia.net",crossOrigin:"anonymous"})),r.createElement(ee.a,{onTouchStart:_,onFocus:_,onMouseOver:_,onClick:T,ref:v,translations:{buttonText:D,buttonAriaLabel:D}}),N&&(0,V.createPortal)(r.createElement(ae,(0,g.Z)({onClose:C,initialScrollY:window.scrollY,initialQuery:w,navigator:S,transformItems:G,hitComponent:le,resultsFooterComponent:R,transformSearchClient:M},o,{searchParameters:h})),b.current))}var oe=function(e){var t=e.closeDocsSidebar,n=(0,F.default)().siteConfig;return r.createElement(re,(0,g.Z)({},n.themeConfig.algolia,{closeDocsSidebar:t}))},se=n(3424);se.Z.initialize({startOnLoad:!0});var ce=function(e){var t=e.chart;return(0,r.useEffect)((function(){se.Z.contentLoaded()}),[]),r.createElement("div",{className:"mermaid"},t)},de=n(7694),pe=n(4544),ue=function(e){var t=e.language,n=e.children,a="string"==typeof n?n.trim():"";return r.createElement(pe.ZP,(0,g.Z)({},pe.lG,{theme:de.Z,code:a,language:t}),(function(e){var t=e.className,n=e.style,a=e.tokens,l=e.getLineProps,i=e.getTokenProps;return r.createElement("pre",{className:t,style:n},a.map((function(e,t){return r.createElement("div",l({line:e,key:t}),e.map((function(e,t){return r.createElement("span",i({token:e,key:t}))})))})))}))}},6806:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var a=n(2122),l=n(9756),i=(n(7294),n(3905)),r=n(2911),o=n(2296),s={id:"cicd-integration-plugin",title:"CI/CD Integration Plugin"},c={unversionedId:"cicd-integration/cicd-integration-plugin",id:"version-0.9.0/cicd-integration/cicd-integration-plugin",isDocsHomePage:!1,title:"CI/CD Integration Plugin",description:"Overview",source:"@site/versioned_docs/version-0.9.0/cicd-integration/cicd-integration-plugin.mdx",sourceDirName:"cicd-integration",slug:"/cicd-integration/cicd-integration-plugin",permalink:"/docs/cicd-integration/cicd-integration-plugin",version:"0.9.0",frontMatter:{id:"cicd-integration-plugin",title:"CI/CD Integration Plugin"},sidebar:"version-0.9.0/docs",previous:{title:"Test Agent",permalink:"/docs/agents/test-agent"},next:{title:"Drill4J Backend",permalink:"/docs/drill-services/drill-backend"}},d=[{value:"Overview",id:"overview",children:[{value:"Features",id:"features",children:[]},{value:"How to use",id:"how-to-use",children:[]}]},{value:"Adding plugin",id:"adding-plugin",children:[{value:"Gradle",id:"gradle",children:[]},{value:"Maven",id:"maven",children:[]}]},{value:"Test Agent",id:"test-agent",children:[{value:"Set up",id:"set-up",children:[]},{value:"Disable for specific task",id:"disable-for-specific-task",children:[]},{value:"Agent files download source",id:"agent-files-download-source",children:[]},{value:"Disable test tracing",id:"disable-test-tracing",children:[]},{value:"Disable sending test metadata",id:"disable-sending-test-metadata",children:[]}]},{value:"Application Agent",id:"application-agent",children:[{value:"Set up",id:"set-up-1",children:[]},{value:"Disable for specific task",id:"disable-for-specific-task-1",children:[]},{value:"Agent files download source",id:"agent-files-download-source-1",children:[]}]},{value:"Test Recommendations",id:"test-recommendations",children:[{value:"Set up",id:"set-up-2",children:[]},{value:"Disabling recommended tests",id:"disabling-recommended-tests",children:[]},{value:"Comparing with baseline",id:"comparing-with-baseline",children:[]}]},{value:"Generating a change testing report",id:"generating-a-change-testing-report",children:[{value:"Gradle",id:"gradle-16",children:[]},{value:"Maven",id:"maven-16",children:[]}]},{value:"GitHub Pull Request report",id:"github-pull-request-report",children:[{value:"Gradle",id:"gradle-17",children:[]},{value:"Maven",id:"maven-17",children:[]}]},{value:"GitLab Merge Request report",id:"gitlab-merge-request-report",children:[{value:"Gradle",id:"gradle-18",children:[]},{value:"Maven",id:"maven-18",children:[]}]},{value:"Sending Git metadata to Drill4J API",id:"sending-git-metadata-to-drill4j-api",children:[{value:"Gradle",id:"gradle-19",children:[]},{value:"Maven",id:"maven-19",children:[]}]},{value:"Scanning application archive (JAR/WAR/EAR)",id:"scanning-application-archive-jarwarear",children:[{value:"Run Gradle/Maven command",id:"run-gradlemaven-command",children:[]},{value:"Enable scan on build",id:"enable-scan-on-build",children:[]}]},{value:"Baseline strategy",id:"baseline-strategy",children:[{value:"Search by tags",id:"search-by-tags",children:[]},{value:"Search by merge base",id:"search-by-merge-base",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"How to confirm that agents are enabled when running tests?",id:"how-to-confirm-that-agents-are-enabled-when-running-tests",children:[]},{value:"Tests do not appear in Drill4J after running in Maven with Java 17",id:"tests-do-not-appear-in-drill4j-after-running-in-maven-with-java-17",children:[]}]}],p={toc:d};function u(e){var t=e.components,n=(0,l.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The CI/CD integration plugin offers a wide range of capabilities and is available for both Gradle and Maven."),(0,i.kt)("p",null,"All these functions are provided under a single tool because they are related to tasks executed within Maven or Gradle."),(0,i.kt)("h3",{id:"features"},"Features"),(0,i.kt)("p",null,"CI/CD Integration Plugin functions include:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Downloading and configuring agents"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#application-agent"},"Application agent")," - to capture unit tests coverage"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#test-agent"},"Test agent")," - to capture metadata for tests launches (such as runner, test name and result)"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Generating change testing reports"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#generating-a-change-testing-report"},"With a command")," - useful to call on branch push event."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#github-pull-request-report"},"On GitHub Pull Request")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#gitlab-merge-request-report"},"On GitLab Merge Request")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"#sending-git-metadata-to-drill4j-api"},(0,i.kt)("strong",{parentName:"a"},"Sending Git metadata to Drill4J API"))," - to supply Drill4J with commit information (date, hash, author) from which a particular application version is built."))),(0,i.kt)("h3",{id:"how-to-use"},"How to use"),(0,i.kt)("p",null,"The general gist of using the CI/CD integration plugin is:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#adding-plugin"},"Add the plugin")," to your Maven or Gradle configuration."),(0,i.kt)("li",{parentName:"ol"},"Configure the agents (for ",(0,i.kt)("a",{parentName:"li",href:"#application-agent"},"application"),", for ",(0,i.kt)("a",{parentName:"li",href:"#test-agent"},"tests"),")"),(0,i.kt)("li",{parentName:"ol"},"Use commands provided by CI/CD Integration Plugin and integrate it with your CI/CD scripts")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The exact configuration files and commands you should use depend on the task at hand. This page provides general reference. ",(0,i.kt)("strong",{parentName:"p"},"For step-by-step guides")," refer to Integration Guides section (see documentation sidebar at the top of the page).")),(0,i.kt)("h2",{id:"adding-plugin"},"Adding plugin"),(0,i.kt)("p",null,"This section describes how to add CI/CD integration plugin to your project."),(0,i.kt)("h3",{id:"gradle"},"Gradle"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Add the following to Gradle build file ",(0,i.kt)("inlineCode",{parentName:"li"},"plugins")," section:")),(0,i.kt)(o.u0,{language:"kotlin",mdxType:"Codeblock"},'\nplugins {\n    id("com.epam.drill.integration.cicd") version "'+r.ns+'"\n}\n'),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Set Drill4J API address and API key",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Option 1")," (recommended): using environment variables.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'// Exact way to set variables depends on the environment\nDRILL_API_URL="http://localhost:8090/api"\nDRILL_API_KEY="your_api_key_here"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Option 2")," (not recommended): using Gradle build file.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'// Add the following section in `build.gradle` at root level\ndrill {\n    // Set API url and API key\n    apiUrl = "http://localhost:8090/api"\n    apiKey = "your_api_key_here"\n}\n')))))),(0,i.kt)("h3",{id:"maven"},"Maven"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Add the Drill4J CI/CD integration plugin to ",(0,i.kt)("inlineCode",{parentName:"li"},"<build>")," section of pom.xml file:")),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<build>\n    <plugins>\n        <plugin>\n            <groupId>com.epam.drill.integration</groupId>\n            <artifactId>drill-maven-plugin</artifactId>\n            <version>"+r.ns+"</version>\n            <configuration>\n            \n            </configuration>\n        </plugin>\n   </plugins>\n</build>\n"),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Set Drill4J API address and API key",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Option 1")," (recommended): using environment variables.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'// Exact way to set variables depends on the environment\nDRILL_API_URL="http://localhost:8090/api"\nDRILL_API_KEY="your_api_key_here"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Option 2")," (not recommended): using Maven configuration file.\n")))),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n        <build>\n            <plugins>\n                <plugin>\n                    <groupId>com.epam.drill.integration</groupId>\n                    <artifactId>drill-maven-plugin</artifactId>\n                    <version>"+r.ns+"</version>\n                    <configuration>\n                        \x3c!-- Set API url and API key --\x3e\n                        <apiUrl>http://localhost:8090/api</apiUrl>\n                        <apiKey>your_api_key_here</apiKey>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </build>\n"),(0,i.kt)("h2",{id:"test-agent"},"Test Agent"),(0,i.kt)("p",null,"Enables Drill4J to map tests to coverage and vice versa. For more details on this feature and its purpose, see the ",(0,i.kt)("a",{parentName:"p",href:"/docs/agents/test-agent"},"Test Agent")," reference page."),(0,i.kt)("h3",{id:"set-up"},"Set up"),(0,i.kt)("p",null,"Prerequisite - ",(0,i.kt)("a",{parentName:"p",href:"#adding-plugin"},"CI/CD integration plugin")," added to project"),(0,i.kt)("h4",{id:"gradle-1"},"Gradle"),(0,i.kt)("p",null,"To enable the Drill4J Test Agent to Gradle project add the following:"),(0,i.kt)(o.u0,{language:"kotlin",mdxType:"Codeblock"},'\ndrill {\n    // groupId is a required parameter to run test agent\n    groupId = "my-group"\n    enableTestAgent {\n        version = '+r._2+"\n    }\n}\n"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note, that Test Agent will automatically launch for every Gradle test task.\nIf you need to disable Test Agent for specific tasks, refer to ",(0,i.kt)("a",{parentName:"p",href:"#disable-for-specific-task"},"this section"))),(0,i.kt)("h4",{id:"maven-1"},"Maven"),(0,i.kt)("p",null,"To enable the Drill4J Test Agent to Maven project add the following to pom.xml:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<plugin>\n    <groupId>com.epam.drill.integration</groupId>\n    <artifactId>drill-maven-plugin</artifactId>\n    <version>"+r.ns+"</version>\n    <configuration>\n        \x3c!-- groupId is a required parameter to run test agent --\x3e\n        <groupId>my-group</groupId>\n        <testAgent>\n            <version>"+r._2+"</version>\n        </testAgent>\n    </configuration>\n    \x3c!-- adds enableTestAgent goal --\x3e\n    <executions>\n        <execution>\n            <goals>\n                <goal>enableTestAgent</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note, that Test Agent will automatically launch for every Maven test goal.\nIf you need to disable Test Agent for specific goals, refer to ",(0,i.kt)("a",{parentName:"p",href:"#disable-for-specific-task"},"this section"))),(0,i.kt)("h3",{id:"disable-for-specific-task"},"Disable for specific task"),(0,i.kt)("p",null,"By default, the Test Agent will launch for every Gradle task and Maven goal.\nTo disable the Test Agent for specific tasks/goals, follow the steps below:"),(0,i.kt)("h5",{id:"gradle-2"},"Gradle"),(0,i.kt)("p",null,"Add the following to configuration of test task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"// Standard test configuration in Gradle\ntest {\n    useJUnitPlatform() // or any other test runner\n\n    drill {\n        testAgent {\n            enabled = false // Disables Test agent for this test task\n        }\n    }\n}\n")),(0,i.kt)("h5",{id:"maven-2"},"Maven"),(0,i.kt)("p",null,"There is no way to disable Test Agent for specific Maven goal while keeping it for all others."),(0,i.kt)("p",null,"Instead you can create dedicated Maven profile for both CI/CD Integration Plugin and Test Agent configuration:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<profiles>\n    <profile>\n        \x3c!-- profile name, it is totally arbitrary --\x3e\n        <id>profileWithTestAgent</id>\n        <activation>\n            <activeByDefault>false</activeByDefault>\n        </activation>\n        <build>\n            <plugins>\n                <plugin>\n                    <groupId>com.epam.drill.integration</groupId>\n                    <artifactId>drill-maven-plugin</artifactId>\n                    <version>"+r.ns+"</version>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>enableTestAgent</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </build>\n    </profile>\n</profiles>\n"),(0,i.kt)("p",null,"This way Test Agent will only launch when the respective profile is launched."),(0,i.kt)("h3",{id:"agent-files-download-source"},"Agent files download source"),(0,i.kt)("p",null,"There are 3 ways to specify where CI/CD plugin should load agent from:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#automatic-download"},"Automatic download")," by version tag - the default option."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#custom-url-download"},"Custom URL download")," - arbitrary URL to ZIP release. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#local-path-to-zip-release"},"Local path to ZIP release")," - local path to ZIP release.")),(0,i.kt)("h4",{id:"automatic-download"},"Automatic download"),(0,i.kt)("p",null,"To enable automatic download specify ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," parameter with concrete version. See list of available versions on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Drill4J/autotest-agent/releases"},"Test Agent GitHub repository")," releases page."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"NOTE:"),"\nGitHub API has rate limits for unauthenticated downloads. To increase these limits, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"GH_USER_TOKEN")," environment variable.")),(0,i.kt)("h5",{id:"gradle-3"},"Gradle"),(0,i.kt)(o.u0,{language:"kotlin",mdxType:"Codeblock"},'\nenableTestAgent {\n    version = "'+r.ns+'"\n}\n'),(0,i.kt)("h5",{id:"maven-3"},"Maven"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<testAgent>\n    <version>"+r.ns+"</version>\n</testAgent>\n"),(0,i.kt)("h4",{id:"custom-url-download"},"Custom URL download"),(0,i.kt)("p",null,"To download the Test Agent from a custom URL, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"downloadUrl")," parameter to the desired link:"),(0,i.kt)("h5",{id:"gradle-4"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'enableTestAgent {\n    downloadUrl = "http://url_to_download_agent.zip"\n}\n')),(0,i.kt)("h5",{id:"maven-4"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<testAgent>\n    <downloadUrl>http://url_to_download_agent.zip</downloadUrl>\n</testAgent>\n")),(0,i.kt)("h4",{id:"local-path-to-zip-release"},"Local path to ZIP release"),(0,i.kt)("p",null,"To use a locally available Test Agent, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"zipPath")," parameter to the path of the local zip archive:"),(0,i.kt)("h5",{id:"gradle-5"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'enableTestAgent {\n    zipPath = "path/to/local/agent.zip"\n}\n')),(0,i.kt)("h5",{id:"maven-5"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<testAgent>\n    <zipPath>path/to/local/agent.zip</zipPath>\n</testAgent>\n")),(0,i.kt)("h3",{id:"disable-test-tracing"},"Disable test tracing"),(0,i.kt)("p",null,"By default, the Test Agent will trace all tests executed in Gradle or Maven.\nThis lets you measure the coverage of each individual test, but it also generates a large amount of data.\nIf you only need the overall coverage for an entire test session rather than for each test - you can disable test tracing."),(0,i.kt)("p",null,"To disable test tracing, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"testTracingEnabled")," parameter to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," in the Test Agent configuration:"),(0,i.kt)("h5",{id:"gradle-6"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"enableTestAgent {\n    testTracingEnabled = false\n}\n")),(0,i.kt)("h5",{id:"maven-6"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<testAgent>\n    <testTracingEnabled>false</testTracingEnabled>\n</testAgent>\n")),(0,i.kt)("h3",{id:"disable-sending-test-metadata"},"Disable sending test metadata"),(0,i.kt)("p",null,"By default, the Test Agent sends test launch metadata (test names, test results, test duration, etc.) to the Drill4J backend.\nThis metadata is used to provide detailed test reports and recommendations."),(0,i.kt)("p",null,"If you want to disable this feature, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"testLaunchMetadataSendingEnabled")," parameter to ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," in the Test Agent configuration:"),(0,i.kt)("h5",{id:"gradle-7"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"enableTestAgent {\n    testLaunchMetadataSendingEnabled = false\n}\n")),(0,i.kt)("h5",{id:"maven-7"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<testAgent>\n    <testLaunchMetadataSendingEnabled>false</testLaunchMetadataSendingEnabled>\n</testAgent>\n")),(0,i.kt)("h2",{id:"application-agent"},"Application Agent"),(0,i.kt)("p",null,"Enables Drill4J to collect coverage for application classes. See the ",(0,i.kt)("a",{parentName:"p",href:"/docs/agents/java-agent"},"Application Agent")," reference page for more details."),(0,i.kt)("h3",{id:"set-up-1"},"Set up"),(0,i.kt)("p",null,"Prerequisite - ",(0,i.kt)("a",{parentName:"p",href:"#adding-plugin"},"CI/CD integration plugin")," added to project"),(0,i.kt)("h4",{id:"gradle-8"},"Gradle"),(0,i.kt)("p",null,"To enable the Drill4J Application Agent to Gradle project add the following:"),(0,i.kt)(o.u0,{language:"groovy",mdxType:"Codeblock"},'\ndrill {\n    // Enter appropriate parameter values\n    groupId = "my-group"\n    appId = "my-application"\n    // Specifies the java packages for Drill4J to monitor\n    // Use "/" separator for package name parts\n    packagePrefixes = "my/awesome/application"\n    // Optional, identifies app version built from checked out commit\n    buildVersion = "1.0.0"\n    enableAppAgent {\n        version = "'+r.Hl+'"\n    }\n}\n'),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note, that Application Agent will automatically launch for every Gradle exec task.\nIf you need to disable Application Agent for specific tasks, refer to ",(0,i.kt)("a",{parentName:"p",href:"#disable-for-specific-task-1"},"this section"))),(0,i.kt)("h4",{id:"maven-8"},"Maven"),(0,i.kt)("p",null,"To enable the Drill4J Application Agent to Maven project add the following to pom.xml:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<plugin>\n    <groupId>com.epam.drill.integration</groupId>\n    <artifactId>drill-maven-plugin</artifactId>\n    <version>"+r.ns+'</version>\n    <configuration>\n        \x3c!-- Enter appropriate parameter values --\x3e\n        <groupId>my-group</groupId>\n        <appId>my-application</appId>\n        \x3c!--  Specifies the java packages for Drill4J to monitor --\x3e\n        \x3c!-- Use "/" separator for package name parts --\x3e\n        <packagePrefixes>my/awesome/application</packagePrefixes>\n        \x3c!-- Optional, identifies app version built from checked out commit --\x3e\n        <buildVersion>1.0.0</buildVersion>\n        <appAgent>\n            <version>'+r.Hl+"</version>\n        </appAgent>\n    </configuration>\n    \x3c!-- adds enableAppAgent goal --\x3e\n    <executions>\n        <execution>\n            <goals>\n                <goal>enableAppAgent</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note, that Application Agent will automatically launch for every Maven test goal. If you need to disable Application Agent for specific goals, refer to ",(0,i.kt)("a",{parentName:"p",href:"#disable-for-specific-task-1"},"this section"))),(0,i.kt)("h3",{id:"disable-for-specific-task-1"},"Disable for specific task"),(0,i.kt)("p",null,"By default, the Application Agent will launch for every Gradle task and Maven goal. To disable the Application Agent for specific tasks/goals, follow the steps below:"),(0,i.kt)("h5",{id:"gradle-9"},"Gradle"),(0,i.kt)("p",null,"Add the following to configuration of test task:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-groovy"},"// Standard test configuration in Gradle\ntest {\n    useJUnitPlatform() // or any other test runner\n\n    drill {\n        appAgent {\n            enabled = false // Disables Application agent for this test task\n        }\n    }\n}\n")),(0,i.kt)("h5",{id:"maven-9"},"Maven"),(0,i.kt)("p",null,"There is no way to disable Application Agent for specific Maven goal while keeping it for all others."),(0,i.kt)("p",null,"Instead you can create dedicated Maven profile for both CI/CD Integration Plugin and Application Agent configuration:"),(0,i.kt)(o.u0,{language:"",mdxType:"Codeblock"},"\n<profiles>\n    <profile>\n        \x3c!-- profile name, it is totally arbitrary --\x3e\n        <id>profileWithAppAgent</id>\n        <activation>\n            <activeByDefault>false</activeByDefault>\n        </activation>\n        <build>\n            <plugins>\n                <plugin>\n                    <groupId>com.epam.drill.integration</groupId>\n                    <artifactId>drill-maven-plugin</artifactId>\n                    <version>"+r.ns+"</version>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>enableAppAgent</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </build>\n    </profile>\n</profiles>\n"),(0,i.kt)("p",null,"This way Application Agent will only launch when the respective profile is launched."),(0,i.kt)("h3",{id:"agent-files-download-source-1"},"Agent files download source"),(0,i.kt)("p",null,"There are 3 ways to specify where CI/CD plugin should load agent from:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#automatic-download-1"},"Automatic download")," by version tag - the default option."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#custom-url-download-1"},"Custom URL download")," - arbitrary URL to ZIP release."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#local-path-to-zip-release-1"},"Local path to ZIP release")," - local path to ZIP release.")),(0,i.kt)("h4",{id:"automatic-download-1"},"Automatic download"),(0,i.kt)("p",null,"To enable automatic download specify ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," parameter with concrete version. See list of available versions on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Drill4J/java-agent/releases"},"Application Agent GitHub repository")," releases page."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"NOTE:"),"\nGitHub API has rate limits for unauthenticated downloads. To increase these limits, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"GH_USER_TOKEN")," environment variable.")),(0,i.kt)("h5",{id:"gradle-10"},"Gradle"),(0,i.kt)(o.u0,{language:"kotlin",mdxType:"Codeblock"},'\nenableAppAgent {\n    version = "'+r.Hl+'"\n}\n'),(0,i.kt)("h5",{id:"maven-10"},"Maven"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<appAgent>\n    <version>"+r.Hl+"</version>\n</appAgent>\n"),(0,i.kt)("h4",{id:"custom-url-download-1"},"Custom URL download"),(0,i.kt)("p",null,"To download the Application Agent from a custom URL, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"downloadUrl")," parameter to the desired link:"),(0,i.kt)("h5",{id:"gradle-11"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'enableAppAgent {\n    downloadUrl = "http://url_to_download_agent.zip"\n}\n')),(0,i.kt)("h5",{id:"maven-11"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<appAgent>\n    <downloadUrl>http://url_to_download_agent.zip</downloadUrl>\n</appAgent>\n")),(0,i.kt)("h4",{id:"local-path-to-zip-release-1"},"Local path to ZIP release"),(0,i.kt)("p",null,"To use a locally available Application Agent, set the ",(0,i.kt)("inlineCode",{parentName:"p"},"zipPath")," parameter to the path of the local zip archive:"),(0,i.kt)("h5",{id:"gradle-12"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'enableAppAgent {\n    zipPath = "path/to/local/agent.zip"\n}\n')),(0,i.kt)("h5",{id:"maven-12"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<appAgent>\n    <zipPath>path/to/local/agent.zip</zipPath>\n</appAgent>\n")),(0,i.kt)("h2",{id:"test-recommendations"},"Test Recommendations"),(0,i.kt)("p",null,"Drill4J helps to significantly reduce test execution time by providing recommendations on\nwhich tests can be skipped because the code they cover has already been tested before."),(0,i.kt)("h3",{id:"set-up-2"},"Set up"),(0,i.kt)("p",null,"Prerequisites:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#test-agent"},"Test agent")," is enabled."),(0,i.kt)("li",{parentName:"ul"},"Before running the tests, make sure that the application under test is already deployed with the ",(0,i.kt)("a",{parentName:"li",href:"#application-agent"},"Application Agent")," enabled.")),(0,i.kt)("h4",{id:"gradle-13"},"Gradle"),(0,i.kt)("p",null,"To enable test recommendations add the following properties to your Gradle build file:"),(0,i.kt)(o.u0,{language:"kotlin",mdxType:"Codeblock"},'\ndrill {\n    // Group ID\n    groupId = "my-group"\n    // ID of the application under test\n    appId = "my-application"\n    // Identifies the version of the application under test that is based on the checked out commit\n    buildVersion = "1.0.0"\n    // Enables Test Recommendations\n    enableTestRecommendations {\n        coveragePeriodDays = 30 // Optional, sets the period of days for which coverage data is taken into account\n    }\n    // Enables Test Agent\n    enableTestAgent {\n        version = '+r._2+"\n    }\n}\n"),(0,i.kt)("h4",{id:"maven-13"},"Maven"),(0,i.kt)("p",null,"To enable test recommendations add the following properties to your Maven pom.xml file:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<plugin>\n    <groupId>com.epam.drill.integration</groupId>\n    <artifactId>drill-maven-plugin</artifactId>\n    <version>"+r.ns+"</version>\n    <configuration>\n        \x3c!-- Group ID --\x3e\n        <groupId>my-group</groupId>\n        \x3c!-- ID of the application under test --\x3e\n        <appId>my-application</appId>\n        \x3c!-- Identifies the version of the application under test that is based on the checked out commit --\x3e\n        <buildVersion>1.0.0</buildVersion>\n        <testRecommendations>\n            \x3c!-- Enables Test Recommendations --\x3e\n            <enabled>true<enabled>\n            \x3c!-- Optional, sets the period of days for which coverage data is taken into account --\x3e\n            <coveragePeriodDays>30</coveragePeriodDays>\n        </testRecommendations>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                \x3c!-- Enables Test Agent --\x3e\n                <goal>enableAppAgent</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"),(0,i.kt)("h3",{id:"disabling-recommended-tests"},"Disabling recommended tests"),(0,i.kt)("h4",{id:"gradle-14"},"Gradle"),(0,i.kt)("p",null,"To disable recommended tests, make the following changes to your Gradle file:"),(0,i.kt)(o.u0,{language:"kotlin",mdxType:"Codeblock"},"\nenableTestRecommendations {\n    // Optional, disables test recommendations\n    enabled = false\n}\n"),(0,i.kt)("h4",{id:"maven-14"},"Maven"),(0,i.kt)("p",null,"To disable recommended tests, make the following changes to your Maven file:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<testRecommendations>\n    \x3c!-- Disables Test Recommendations --\x3e\n    <enabled>false<enabled>\n</testRecommendations>\n"),(0,i.kt)("h3",{id:"comparing-with-baseline"},"Comparing with baseline"),(0,i.kt)("p",null,"Drill4J allows you to run tests only for code that has changed compared to the baseline version.\nTo skip tests for unchanged code, set the baseline version to compare with."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"See the ",(0,i.kt)("a",{parentName:"p",href:"#baseline-strategy"},"Baseline Strategy")," section for more information.")),(0,i.kt)("h4",{id:"gradle-15"},"Gradle"),(0,i.kt)("p",null,"To set the baseline configuration, add the following properties to your Gradle build file:"),(0,i.kt)(o.u0,{language:"kotlin",mdxType:"Codeblock"},'\ndrill {\n    // Group ID\n    groupId = "my-group"\n    // ID of the application under test\n    appId = "my-application"\n    // Identifies the version of the application under test that is based on the checked out commit\n    buildVersion = "1.0.0"\n    // Set either to SEARCH_BY_MERGE_BASE or SEARCH_BY_TAG. See "Baseline Strategy" section on the page below for more info\n    baseline {\n        searchStrategy = "SEARCH_BY_TAG"\n    }\n    // Enable Test Recommendations and Test Agent\n    ...\n}\n'),(0,i.kt)("h4",{id:"maven-15"},"Maven"),(0,i.kt)("p",null,"Set the ",(0,i.kt)("inlineCode",{parentName:"p"},"<baseline>")," Drill4J configuration to your Maven pom.xml file:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},'\n<configuration>\n    \x3c!-- Group ID --\x3e\n    <groupId>my-group</groupId>\n    \x3c!-- ID of the application under test --\x3e\n    <appId>my-application</appId>\n    \x3c!-- Identifies the version of the application under test that is based on the checked out commit --\x3e\n    <buildVersion>1.0.0</buildVersion>\n    \x3c!-- Set either to SEARCH_BY_MERGE_BASE or SEARCH_BY_TAG. See "Baseline Strategy" section on the page below for more info --\x3e\n    <baseline>\n        <searchStrategy>SEARCH_BY_TAG</searchStrategy>\n    </baseline>\n    \x3c!-- Enable Test Recommendations and Test Agent --\x3e\n    ...\n</configuration>\n'),(0,i.kt)("h2",{id:"generating-a-change-testing-report"},"Generating a change testing report"),(0,i.kt)("p",null,"A Change Testing Report provides insights into the code changes that have been tested,\nallowing you to ensure the quality of newly introduced changes."),(0,i.kt)("p",null,"For step-by-step integrations guide see:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/docs/cicd-integration/gitlab"},"GitLab integration")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/docs/cicd-integration/github"},"GitHub integration"))),(0,i.kt)("h3",{id:"gradle-16"},"Gradle"),(0,i.kt)("p",null,"Add the following properties to your Gradle build file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'drill {\n    // Enter appropriate parameter values\n    groupId = "my-group"\n    appId = "my-application"\n\n    // Set either to SEARCH_BY_MERGE_BASE or SEARCH_BY_TAG. See "Baseline Strategy" section on the page below for more info\n    baseline {\n       searchStrategy = "SEARCH_BY_TAG"\n    }\n}\n')),(0,i.kt)("p",null,"To generate the Change Testing Report, execute the following Gradle command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew drillGenerateChangeTestingReport\n")),(0,i.kt)("p",null,"The report will be saved in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/build/drill-reports/")," directory."),(0,i.kt)("h3",{id:"maven-16"},"Maven"),(0,i.kt)("p",null,"Add the following properties to your Maven pom.xml file:"),(0,i.kt)(o.u0,{language:"",mdxType:"Codeblock"},"\n<plugin>\n    <groupId>com.epam.drill.integration</groupId>\n    <artifactId>drill-maven-plugin</artifactId>\n    <version>"+r.ns+'</version>\n    <configuration>\n        \x3c!-- Enter appropriate parameter values --\x3e\n        <groupId>my-group</groupId>\n        <appId>my-application</appId>\n        \x3c!-- Set either to SEARCH_BY_MERGE_BASE or SEARCH_BY_TAG. See "Baseline Strategy" section on the page below for more info --\x3e\n        <baseline>\n            <searchStrategy>SEARCH_BY_TAG</searchStrategy>\n        </baseline>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>generateChangeTestingReport</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n'),(0,i.kt)("p",null,"To generate the Change Testing Report, execute the following Maven command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mvn drill:generateChangeTestingReport\n")),(0,i.kt)("p",null,"The report will be saved in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/target/drill-reports/")," directory."),(0,i.kt)("h2",{id:"github-pull-request-report"},"GitHub Pull Request report"),(0,i.kt)("p",null,"This feature posts a report of the tested changes as a comment on a GitHub Pull Request.\nIt compares the current build with the merge base build of the target branch for the Pull Request."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"IMPORTANT!"),"\nThis command can only be executed within a GitHub workflow and requires specific environment variables available only in a GitHub Actions job.")),(0,i.kt)("p",null,"To execute this command, you need to provide a GitHub API token.\nAPI token should have following rights:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"repo"),(0,i.kt)("li",{parentName:"ul"},"write:discussion")),(0,i.kt)("h3",{id:"gradle-17"},"Gradle"),(0,i.kt)("p",null,"Add the following properties to your Gradle build file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'drill {\n    // Enter appropriate parameter values\n    groupId = "my-group"\n    appId = "my-application"\n\n    github {\n        // Enter your GitHub Token\n        token = "your-github-token-here"\n    }\n}\n')),(0,i.kt)("p",null,"To leave a comment on a Pull Request, execute the following Gradle command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew drillGithubPullRequestReport\n")),(0,i.kt)("h3",{id:"maven-17"},"Maven"),(0,i.kt)("p",null,"Add the following properties to the Drill4J plugin configuration in your Maven pom.xml file:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<plugin>\n    <groupId>com.epam.drill.integration</groupId>\n    <artifactId>drill-maven-plugin</artifactId>\n    <version>"+r.ns+"</version>\n    <configuration>\n        \x3c!-- Enter appropriate parameter values --\x3e\n        <groupId>my-group</groupId>\n        <appId>my-application</appId>\n        <github>\n            \x3c!-- Enter your GitHub Token --\x3e\n            <token>your-github-token-here</token>\n        </github>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>githubPullRequestReport</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"),(0,i.kt)("p",null,"To leave a comment on a Pull Request, execute the following Maven command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mvn drill:githubPullRequestReport\n")),(0,i.kt)("h2",{id:"gitlab-merge-request-report"},"GitLab Merge Request report"),(0,i.kt)("p",null,"This feature posts a report of the tested changes as a comment on a GitLab Merge Request.\nIt compares the current build with the merge base build of the target branch for the Merge Request."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"IMPORTANT!"),"\nThis command can only be executed within a GitLab CI/CD job and requires specific environment variables available only during GitLab CI/CD execution.")),(0,i.kt)("p",null,"To execute this command, you need to provide a GitLab private token."),(0,i.kt)("h3",{id:"gradle-18"},"Gradle"),(0,i.kt)("p",null,"Add the following properties to your Gradle build file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'drill {\n    // Enter appropriate parameter values\n    groupId = "my-group"\n    appId = "my-application"\n    \n    gitlab {\n        // Adjust if running on a private GitLab instance\n        apiUrl="https://gitlab.com/api/v4/"\n        // Enter your token\n        privateToken = "your-gitlab-token-here"\n    }\n}\n')),(0,i.kt)("p",null,"To post a comment on a Merge Request, execute the following Gradle command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew drillGitlabMergeRequestReport\n")),(0,i.kt)("h3",{id:"maven-18"},"Maven"),(0,i.kt)("p",null,"Add the following properties to your Maven pom.xml file:"),(0,i.kt)(o.u0,{language:"",mdxType:"Codeblock"},"\n<plugin>\n    <groupId>com.epam.drill.integration</groupId>\n    <artifactId>drill-maven-plugin</artifactId>\n    <version>"+r.ns+"</version>\n    <configuration>\n        \x3c!-- Set appropriate parameter values --\x3e\n        <groupId>my-group</groupId>\n        <appId>my-application</appId>\n        <gitlab>\n            \x3c!-- Adjust if running on a private GitLab instance--\x3e\n            <apiUrl>https://gitlab.com/api/v4/</apiUrl>\n            \x3c!-- Enter your personal token --\x3e\n            <privateToken>someToken</privateToken>\n        </gitlab>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>gitlabMergeRequestReport</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"),(0,i.kt)("p",null,"To leave a comment on a Merge Request, execute the following Maven command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mvn drill:gitlabMergeRequestReport\n")),(0,i.kt)("h2",{id:"sending-git-metadata-to-drill4j-api"},"Sending Git metadata to Drill4J API"),(0,i.kt)("p",null,"This enables Drill4J to display additional data on build in the reports, such as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Build version"),(0,i.kt)("li",{parentName:"ul"},"Current commit SHA"),(0,i.kt)("li",{parentName:"ul"},"Current commit message"),(0,i.kt)("li",{parentName:"ul"},"Commit author")),(0,i.kt)("p",null,"It makes reports more readable and allows to easily associate reports with particular commits. "),(0,i.kt)("h3",{id:"gradle-19"},"Gradle"),(0,i.kt)("p",null,"Add the following parameters to your Gradle build file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'drill {\n    // Set appropriate parameter values\n    groupId = "my-group"\n    appId = "my-application"\n    // Optional, identifies app version built from checked out commit\n    buildVersion = "1.0.0"\n}\n')),(0,i.kt)("p",null,"To send the build information to the Drill4J backend, execute the following Gradle command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew drillSendBuildInfo\n")),(0,i.kt)("h3",{id:"maven-19"},"Maven"),(0,i.kt)("p",null,"Add the following parameters to your Maven pom.xml file:"),(0,i.kt)(o.u0,{language:"xml",mdxType:"Codeblock"},"\n<plugin>\n    <groupId>com.epam.drill.integration</groupId>\n    <artifactId>drill-maven-plugin</artifactId>\n    <version>"+r.ns+"</version>\n    <configuration>\n        \x3c!-- Set appropriate parameter values --\x3e\n        <groupId>my-group</groupId>\n        <appId>my-application</appId>\n        \x3c!-- Optional, identifies app version built from checked out commit --\x3e\n        <buildVersion>1.0.0</buildVersion>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>sendBuildInfo</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n"),(0,i.kt)("p",null,"To send the build information to the Drill4J backend, execute the following Maven command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mvn drill:sendBuildInfo\n")),(0,i.kt)("h2",{id:"scanning-application-archive-jarwarear"},"Scanning application archive (JAR/WAR/EAR)"),(0,i.kt)("p",null,"Drill4J automatically scans information about an application's classes and methods when the application is run with the ",(0,i.kt)("a",{parentName:"p",href:"#application-agent"},"Application agent"),".\nHowever, you can also obtain this information right after building the application \u2014 before it is run.\nYou have two ways to do this: either by running the dedicated Gradle/Maven command,\nor by enabling the corresponding parameter in the plugin configuration."),(0,i.kt)("h3",{id:"run-gradlemaven-command"},"Run Gradle/Maven command"),(0,i.kt)("p",null,"To scan the application archive, execute the dedicated Gradle task or Maven goal as described below."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note, before executing the command, you need to enable the ",(0,i.kt)("a",{parentName:"p",href:"#application-agent"},"Application agent")," and build your application.")),(0,i.kt)("h4",{id:"gradle-20"},"Gradle"),(0,i.kt)("p",null,"Execute the following Gradle command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew drillScanAppArchive\n")),(0,i.kt)("h4",{id:"maven-20"},"Maven"),(0,i.kt)("p",null,"Execute the following Maven command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mvn drill:scanAppArchive\n")),(0,i.kt)("h3",{id:"enable-scan-on-build"},"Enable scan on build"),(0,i.kt)("p",null,"Alternatively, you can set up the ",(0,i.kt)("inlineCode",{parentName:"p"},"archiveScannerEnabled")," parameter to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in the Application Agent plugin configuration.\nThis case the application archive will be scanned automatically after the build is completed."),(0,i.kt)("h4",{id:"gradle-21"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"testAgent {\n    archiveScannerEnabled = true // Enables automatic scanning of the application archive\n}\n")),(0,i.kt)("h4",{id:"maven-21"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<appAgent>\n    <archiveScannerEnabled>true</archiveScannerEnabled> \x3c!-- Enables automatic scanning of the application archive --\x3e\n</appAgent>\n")),(0,i.kt)("h2",{id:"baseline-strategy"},"Baseline strategy"),(0,i.kt)("p",null,"To generate a Change Testing Report or enable Test Recommendations, the current build must be compared to a baseline build.\nDrill4J supports multiple strategies for identifying the baseline build."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Search by tags"),(0,i.kt)("li",{parentName:"ul"},"Search by merge base")),(0,i.kt)("h3",{id:"search-by-tags"},"Search by tags"),(0,i.kt)("p",null,"This strategy compares the current build to a baseline build identified by Git tags."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"IMPORTANT!"),"\nYou need to have at least one Git tag in your repository for this strategy to work.")),(0,i.kt)("h4",{id:"gradle-22"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'baseline {\n    // Strategy to find a baseline commit\n    searchStrategy = "SEARCH_BY_TAG"\n\n    // Adjust to match your tag naming scheme\n    tagPattern = "v[0-9].[0-9].[0-9]*"\n}\n')),(0,i.kt)("h4",{id:"maven-22"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<baseline>\n    \x3c!-- Strategy to find a baseline commit --\x3e\n    <searchStrategy>SEARCH_BY_TAG</searchStrategy>\n\n    \x3c!-- Adjust to match your tag naming scheme --\x3e\n    <tagPattern>v[0-9].[0-9].[0-9]*</tagPattern>\n</baseline>\n")),(0,i.kt)("h3",{id:"search-by-merge-base"},"Search by merge base"),(0,i.kt)("p",null,"This strategy compares the current build to the baseline based on the common ancestor (merge base) of two branches."),(0,i.kt)("h4",{id:"gradle-23"},"Gradle"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'baseline {\n    // Strategy to find a baseline commit\n    searchStrategy = "SEARCH_BY_MERGE_BASE"\n\n    // Set to either branch, tag, or a commit. Current application version will be compared against last version matching the <tagRef> --\x3e\n    targetRef = "main"\n}\n')),(0,i.kt)("h4",{id:"maven-23"},"Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<baseline>\n    \x3c!-- Strategy to find a baseline commit --\x3e\n    <searchStrategy>SEARCH_BY_MERGE_BASE</searchStrategy>\n\n    \x3c!-- Set to either branch, tag, or a commit. Current application version will be compared against last version matching the <tagRef> --\x3e\n    <targetRef>main</targetRef>\n</baseline>\n")),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("h3",{id:"how-to-confirm-that-agents-are-enabled-when-running-tests"},"How to confirm that agents are enabled when running tests?"),(0,i.kt)("p",null,"Once loaded, the Drill4J agent prints the following ASCII logo in the Gradle/Maven console log:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-log"},'Task :test is modified by Drill\n      ____    ____                 _       _          _  _                _\n     |  _"\\U |  _"\\ u     ___     |"|     |"|        | ||"|            U |"| u\n    /| | | |\\| |_) |/    |_"_|  U | | u U | | u      | || |_          _ \\| |/\n    U| |_| |\\|  _ <       | |    \\| |/__ \\| |/__     |__   _|        | |_| |_,-.\n     |____/ u|_| \\_\\    U/| |\\u   |_____| |_____|      /|_|\\          \\___/-(_/\n      |||_   //   \\\\_.-,_|___|_,-.//  \\\\  //  \\\\      u_|||_u          _//\n     (__)_) (__)  (__)\\_)-\' \'-(_/(_")("_)(_")("_)     (__)__)         (__)\n     Autotest Agent (v0.23.1)\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"IMPORTANT!"),"\nMaven does not print the Drill4J logs by default, you need to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"-X")," parameter to the command line:"),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mvn test -X\n"))),(0,i.kt)("h3",{id:"tests-do-not-appear-in-drill4j-after-running-in-maven-with-java-17"},"Tests do not appear in Drill4J after running in Maven with Java 17"),(0,i.kt)("p",null,"If you run tests in Maven with Java 17 or higher and see the following message:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-log"},'java.lang.reflect.InaccessibleObjectException: Unable to make protected final java.lang.Class java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain) throws java.lang.ClassFormatError accessible: module java.base does not "opens java.lang" to unnamed module @4659191b\n    at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)\n    at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)\n    at java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:199)\n    at java.base/java.lang.reflect.Method.setAccessible(Method.java:193)\n    at com.epam.drill.autotest.shadow.javassist.util.proxy.SecurityActions.setAccessible(SecurityActions.java:159)\n    at com.epam.drill.autotest.shadow.javassist.util.proxy.DefineClassHelper$JavaOther.defineClass(DefineClassHelper.java:213)\n    at com.epam.drill.autotest.shadow.javassist.util.proxy.DefineClassHelper$Java11.defineClass(DefineClassHelper.java:52)\n    at com.epam.drill.autotest.shadow.javassist.util.proxy.DefineClassHelper.toClass(DefineClassHelper.java:260)\n    at com.epam.drill.autotest.shadow.javassist.ClassPool.toClass(ClassPool.java:1240)\n    at com.epam.drill.autotest.shadow.javassist.CtClass.toClass(CtClass.java:1392)\n')),(0,i.kt)("p",null,"You should provide ",(0,i.kt)("inlineCode",{parentName:"p"},"--add-opens")," option to the JVM argument line in Maven Surefire Plugin:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-surefire-plugin</artifactId>\n    <configuration>\n        <argLine>@{argLine} --add-opens java.base/java.lang=ALL-UNNAMED</argLine>\n    </configuration>\n</plugin>\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("em",{parentName:"p"},"IMPORTANT!"),"\nDon't forget to add ",(0,i.kt)("inlineCode",{parentName:"p"},"@{argLine}")," to keep Drill4J agents enabled.")))}u.isMDXComponent=!0},2911:function(e){"use strict";e.exports=JSON.parse('{"Hl":"0.9.9","_2":"0.23.8","ns":"0.1.10","lv":"0.9.16","ui":"0.1.3","mR":"0.9.8"}')}}]);